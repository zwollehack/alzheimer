app.controller "HeatMapCtrl",
  ["$scope", "$state",  "$interval", "$window", "$meteor", "_util", "uiGmapGoogleMapApi", "uiGmapIsReady",
  ($scope, $state, $interval,  $window, $meteor, _util, uiGmapGoogleMapApi, uiGmapIsReady) ->
    map = undefined
    uiGmapIsReady.promise(1).then (instances) ->
      instances.forEach (inst) ->
        map = inst.map
        HeatLayer layer
        return
      return
    layer = undefined

    HeatLayer = (heatLayer) ->
      pointarray = undefined
      houseData = []
      pointArray = new google.maps.MVCArray houseData
      $meteor
        .call("getUserData")
        .then(
          (result) ->
            result.forEach (record) ->
              houseData.push { location:new google.maps.LatLng( record.lat, record.lng ), weight: 0.5 }
            heatmap = new google.maps.visualization.HeatmapLayer { data: pointArray, map: map, radius: 15 }
          ,
          (error) ->
            console.log(error)
        )
      return

    $scope.heatLayerCallback = (layer) ->
      console.log(1231231)
      layer = layer
      #set the heat layers backend data
      return

    $scope.map =
      center:
        latitude: 52.5125000
        longitude: 6.094440
      zoom: 13
      options: {
        disableDefaultUI: true
        zoomControl: true
        zoomControlOptions: {
          style: google.maps.ZoomControlStyle.SMALL
        }
      }
    $scope.showHeat = true
    $scope.locationCompanies = []
    uiGmapGoogleMapApi.then (maps) ->
      map = maps
      return
    slider = document.getElementById('range')
    $scope.test = 10;
    noUiSlider.create(slider, {
      range: 'range_all_sliders'
      start: [ 0, 18 ]
      connect: true
      step: 1
      margin: 5
      direction: 'ltr'
      orientation: 'horizontal'
      behaviour: 'tap-drag'
      range: {
        'min': 0
        'max': 105
    }
    pips: {
      mode: 'range'
      density: 3
    }
    })
    skipValues = [
      document.getElementById('skip-value-lower'),
      document.getElementById('skip-value-upper')
    ]
    slider.noUiSlider.on 'update', (values, handle) ->
      skipValues[handle].innerHTML = values[handle]
      return

  ]

# ---
# generated by js2coffee 2.1.0